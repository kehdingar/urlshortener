version: '3.7'

services:
  nginx:
    container_name: Nginx
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - shared-volume:/usr/share/nginx/html
    ports:
      - 80:80
    restart: always

    depends_on:
      - app
      - frontend      
    networks:
      - url_shortener_network

  redis:
    image: redis:5.0.5-alpine
    container_name: "redis"
    ports:
      - 6379:6379
    networks:
      - url_shortener_network      

  app:
    container_name: URLShortener
    restart: always
    build: ./backend
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    tty: true
    depends_on:
      - postgres
      - redis
    networks:
      - url_shortener_network

  postgres:
    container_name: Postgres
    image: postgres:15
    env_file: 
      - ./backend/.env
    restart: always
    ports:
      - '5432:5432'
    volumes:
      - data:/var/lib/postgresql/data:cached
    networks:
      - url_shortener_network

  pgadmin:
    container_name: PostgresAdmin
    image: dpage/pgadmin4
    env_file: 
      - ./backend/.env    
    command: python connect_pgadmin.py
    ports:
      - 5050:80
    depends_on:
      - postgres
    volumes:
      - pgdata:/var/lib/pgadmin
    networks:
      - url_shortener_network

  prometheus:
    image: prom/prometheus:v2.30.3  
    volumes:
      - ./backend/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    depends_on:
      - app
    networks:
      - url_shortener_network

  grafana:
    image: grafana/grafana:8.1.5
    volumes:
      - ./backend/grafana/grafana.ini:/etc/grafana/grafana.ini
      - grafana_data:/var/lib/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - url_shortener_network

  frontend:
    container_name: React
    build:
      context: ./frontend
      dockerfile: Dockerfile
    stdin_open: true
    volumes:
      - './frontend:/app:cached'
      - './frontend/node_modules:/app/node_modules:cached'
      - 'shared-volume:/app/build'      
    networks:
      - url_shortener_network

volumes:
  data:
  shared-volume:
  pgdata:
  prometheus_data:
  grafana_data:    

networks:
  url_shortener_network:
    driver: bridge